apply plugin: 'org.springframework.boot'

dependencies {
    compile project(":jlineup-core")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    //this pulls spring context support to specified spring version because metrics lib in edison core is pulling it to 5.0.2
    compile("org.springframework:spring-context-support:${springVersion}")
    compile("de.otto.edison:edison-core:2.0.0-rc7") {
        exclude group: 'software.amazon.awssdk', module: "*"
    }

    testCompile project(path: ":jlineup-core", configuration: 'testCompile')
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("io.rest-assured:rest-assured:3.0.7")
    testCompile("org.awaitility:awaitility:3.1.0")

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
}

tasks.distZip.enabled = false
tasks.distTar.enabled = false

tasks.bootDistZip {
    baseName = project.archivesBaseName
}

tasks.bootDistTar {
    baseName = project.archivesBaseName
}


test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    baseName = 'jlineup-web'
    mainClassName = "de.otto.jlineup.web.JLineupWebApplication"
    launchScript()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

signing {
    sign configurations.bootArchives
}

uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (project.debugUpload) {
                // use this for local upload debugging instead of sonatype
                repository(url: "file://${buildDir}/repo")
                snapshotRepository(url: "file://${buildDir}/repo")
            } else {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }

            pom.artifactId = "jlineup-web"
            pom.project {
                name 'JLineup Webservice'
                packaging 'jar'
                description 'Webapp image comparison tool'
                url 'http://github.com/otto-de/jlineup'

                scm {
                    url 'scm:git@github.com:otto-de/jlineup.git'
                    connection 'scm:git@github.com:otto-de/jlineup.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'mgeweke'
                        name 'Marco Geweke'
                        url 'https://github.com/MediaMarco'
                    }
                }
            }
        }
    }
}