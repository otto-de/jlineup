buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
        springVersion = '5.2.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.owasp:dependency-check-gradle:3.3.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id 'io.codearte.nexus-staging' version '0.11.0'
}

project.ext.set("debugUpload", false)

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    //maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

apply plugin: 'java'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'org.owasp.dependencycheck'

nexusStaging {
    username = sonatypeUsername
    password = sonatypePassword
    packageGroup = 'de.otto'
}

apply plugin: 'idea'
idea {
    project {
        languageLevel = '1.8'
        ipr.withXml { provider ->
            provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
        }
    }
    workspace {
        iws {
            withXml { xmlFile ->
                def runManager = xmlFile.asNode().component.find { it.@name == 'RunManager' }
                // setup JUnit's default run configuration
                def junitDefaults = runManager.configuration.find { it.@default == 'true' && it.@type == 'JUnit' }
                junitDefaults.option.find { it.@name == 'WORKING_DIRECTORY' }.replaceNode {
                    option(name: 'WORKING_DIRECTORY', value: '$MODULE_DIR$')
                }
            }
        }
    }
}

subprojects {
    version = '4.0.0-SNAPSHOT'
    group = 'de.otto'

    targetCompatibility = '1.8'
    sourceCompatibility = '1.8'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        //maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    task allDeps(type: DependencyReportTask) {}

    apply plugin: 'application'
    apply plugin: 'maven-publish'
    //apply plugin: 'com.github.johnrengelman.shadow'

    apply plugin: 'project-report'
    apply plugin: 'signing'
    apply plugin: 'idea'

    jar {
        manifest.attributes provider: 'gradle'
    }

    idea {
        module {
            iml {
                withXml {
                    def moduleRoot = it.asNode()
                    def facetManager = moduleRoot.component.find { component -> component.'@name' == 'FacetManager' }
                    if (!facetManager) {
                        facetManager = moduleRoot.appendNode('component', [name: 'FacetManager'])
                    }

                    def springFacet = facetManager.facet.find { facet -> facet.'@type' == 'Spring' && facet.'@name' == 'Spring' }
                    if (!springFacet) {
                        springFacet = facetManager.appendNode('facet', [type: 'Spring', name: 'Spring'])
                        springFacet.appendNode('configuration')
                    }
                }
            }
        }
    }
}
